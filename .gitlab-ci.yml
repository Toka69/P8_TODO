image: jakzal/phpqa:php7.4

before_script:
  - composer install

cache:
  paths:
    - vendor/

stages:
  - securityChecker
  - CodingStandards
  - UnitTests

security-checker:
  stage: securityChecker
  script:
    - local-php-security-checker  --path=./composer.lock
  allow_failure: false

phpcs:
  stage: CodingStandards
  script:
    - phpcs -v --ignore=./src/Kernel.php ./src ./tests
  allow_failure: false

phpstan:
  stage: CodingStandards
  script:
    - phpstan analyse ./src
  allow_failure: false

phpmd:
  stage: CodingStandards
  script:
    - phpmd src text codesize,design,phpmd/naming.xml
  allow_failure: false

phpmetrics:
  stage: CodingStandards
  script:
    - phpmetrics --report-html=myreport.html myreport src
  allow_failure: false

twigcs:
  stage: CodingStandards
  script:
    - twigcs templates
  allow_failure: false

phpunit:
  image: php:7.4
  stage: UnitTests
  services:
    - name: mariadb:10.4.17
      alias: mariadb
  variables:
    MYSQL_DATABASE: dbtest
    MYSQL_ROOT_PASSWORD: dbtest
    MYSQL_USER: dbtest
    MYSQL_PASSWORD: dbtest
    DATABASE_URL: "mysql://root:dbtest@mariadb:3306/dbtest?serverVersion=mariadb-10.4.17"
  before_script:
    - apt update && apt install -y git libzip-dev redis-server
    - curl -sSk https://getcomposer.org/installer | php -- -- disable-tls && mv composer.phar /usr/local/bin/composer
    - docker-php-ext-install mysqli pdo pdo_mysql zip
    - docker-php-ext-enable redis
    - php bin/console --if-exists --force --env=test doctrine:database:drop
    - php bin/console --env=test doctrine:database:create
    - php bin/console --env=test doctrine:schema:create
    - php bin/console --no-interaction --env=test doctrine:fixtures:load
  script:
    - php bin/phpunit
  allow_failure: false


